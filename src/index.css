/* Global theme variables */
:root {
    /* New palette */
    --primary-bg: #110D44; /* Deep Indigo */
    --electric: #1C2A9E;   /* Electric Blue */
    --cyan: #6AF2F0;       /* Bright Cyan */
    --purple: #9A2EFE;     /* Vivid Purple */
    --cta: #244BFF;        /* Royal Blue */

    /* Mapped legacy variables for app-wide usage */
    --bg: var(--primary-bg);
    --surface: #182269; /* surface slightly lighter than bg */
    --accent: var(--cta); /* use CTA blue as the general accent */
    --text: #E1E8F7; /* Light Periwinkle/White */
    --text-dim: #A9B6DF; /* dimmed neutral */
    --border: #23308A; /* desaturated electric for borders */
}

/* Enhanced global animated background */
html,
body,
#root {
    height: 100%;
}

body {
    margin: 0;
    position: relative;
    background: linear-gradient(135deg, #110D44, #1C2A9E, #110D44);
    background-size: 300% 300%;
    animation: gradientShift 20s ease infinite;
    color: var(--text);
}

@keyframes gradientShift {
    0% {
        background-position: 0% 50%;
    }

    50% {
        background-position: 100% 50%;
    }

    100% {
        background-position: 0% 50%;
    }
}

/* Parallax grid layer (mid-ground) */
body::before {
    content: "";
    position: fixed;
    inset: 0;
    pointer-events: none;
    background-image: radial-gradient(circle at 1px 1px, rgba(28, 42, 158, 0.12) 1px, transparent 0);
    background-size: 30px 30px;
    animation: gridShift 40s linear infinite;
    z-index: 0;
}

@keyframes gridShift {
    0% {
        background-position: 0% 0%;
    }

    100% {
        background-position: 100% 100%;
    }
}

/* Vignette layer (foreground) */
body::after {
    content: "";
    position: fixed;
    inset: 0;
    pointer-events: none;
    background: radial-gradient(ellipse at center, rgba(0, 0, 0, 0) 40%, rgba(0, 0, 0, 0.55) 100%);
    z-index: 0;
}

/* Reveal animation */
[data-reveal] {
    opacity: 0;
    transform: translateY(16px);
    transition: opacity 700ms ease, transform 700ms ease;
}

[data-reveal].reveal-in {
    opacity: 1;
    transform: translateY(0);
}

/* Accent helpers */
.accent {
    color: var(--accent);
}

.bg-accent {
    background: var(--accent);
}

.border-glow {
    box-shadow: 0 0 0 1px var(--border) inset, 0 0 20px 0 rgba(106, 242, 240, 0.25);
}

.border-glow-strong {
    box-shadow: 0 0 0 1px var(--accent) inset, 0 0 28px 0 rgba(36, 75, 255, 0.45);
}

.card-hover {
    transition: transform 220ms ease, box-shadow 220ms ease, border-color 220ms ease;
}

.card-hover:hover {
    transform: translateY(-8px);
    box-shadow: 0 10px 30px -10px rgba(0, 0, 0, 0.6), 0 0 24px rgba(106, 242, 240, 0.25);
    border-color: var(--accent) !important;
}

/* CTA pulse */
@keyframes pulseAccent {

    0%,
    100% {
        box-shadow: 0 0 0 0 rgba(36, 75, 255, 0.45);
    }

    50% {
        box-shadow: 0 0 0 12px rgba(36, 75, 255, 0.0);
    }
}

.pulse-cta {
    animation: pulseAccent 2.2s ease-in-out infinite;
}

/* Animated gradient background */
.animated-gradient {
    background: linear-gradient(90deg, #110D44, #1C2A9E);
    background-size: 200% 200%;
}

@keyframes gradientShift {
    0% {
        background-position: 0% 50%;
    }

    50% {
        background-position: 100% 50%;
    }

    100% {
        background-position: 0% 50%;
    }
}

.gradient-animate {
    animation: gradientShift 15s ease infinite;
}

/* Bounce-in for icons */
@keyframes bounceIn {
    0% {
        transform: translateY(12px);
        opacity: 0;
    }

    60% {
        transform: translateY(-4px);
        opacity: 1;
    }

    100% {
        transform: translateY(0);
    }
}

.bounce-in {
    animation: bounceIn 700ms ease forwards;
}

/*
  Base styles for elements that will be animated on scroll.
  They start with 0 opacity and are slightly shifted up.
  The transition property ensures a smooth animation.
*/
[data-reveal] {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275), transform 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

/*
    When the 'is-visible' class is added by the Intersection Observer,
    the element fades in and moves to its original position.
  */
[data-reveal].is-visible {
    opacity: 1;
    transform: translateY(0);
}

/*
    Optional: Different reveal directions.
    You can add these data attributes to your elements for varied effects.
    e.g., <div data-reveal data-reveal-from="left">...</div>
  */
[data-reveal-from="left"] {
    transform: translateX(-40px);
}

[data-reveal-from="right"] {
    transform: translateX(40px);
}

[data-reveal-from="left"].is-visible,
[data-reveal-from="right"].is-visible {
    transform: translateX(0);
}

/* Blinking caret for typing effect */
.caret {
    display: inline-block;
    width: 1px;
    height: 1em;
    margin-left: 4px;
    background: var(--text);
    animation: blink 1s step-end infinite;
}

@keyframes blink {
    50% {
        opacity: 0;
    }
}

/* Advanced animation utilities */
.tilt {
    transition: transform 300ms ease, box-shadow 300ms ease;
    transform-style: preserve-3d;
}

.tilt:hover {
    transform: perspective(800px) rotateX(2deg) rotateY(-3deg) translateY(-4px);
    box-shadow: 0 12px 40px -12px rgba(0, 0, 0, 0.6), 0 0 30px rgba(106, 242, 240, 0.25);
}

.shimmer {
    position: relative;
    overflow: hidden;
}

.shimmer::after {
    content: "";
    position: absolute;
    inset: 0;
    background: linear-gradient(110deg, transparent 0%, rgba(255, 255, 255, 0.08) 20%, transparent 40%);
    transform: translateX(-100%);
}

.shimmer:hover::after {
    transform: translateX(200%);
    transition: transform 900ms ease;
}

.zoom-img img {
    transition: transform 500ms ease;
}

.zoom-img:hover img {
    transform: scale(1.05);
}

/* Stagger reveal helper; set --delay-index on children (0..N) */
[data-stagger]>* {
    opacity: 0;
    transform: translateY(14px);
    animation: revealUp 700ms ease forwards;
    animation-delay: calc(var(--delay-index, 0) * 90ms);
}

@keyframes revealUp {
    to {
        opacity: 1;
        transform: translateY(0);
    }
}